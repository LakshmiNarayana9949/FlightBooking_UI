1. Remove all code from app.component.html

2. go to inside app folder, execute the command ng g c "component name". It will create folder with component name, files inside the folder.
For ex: if the component name is registration, then "registration.component.ts, registration.component.css, registration.component.cshtml, 
registration.component.spec".

3. Keep ts, html files. Delete ramaining two files.

4. Import thae new component in app.routing.module.ts file, add a new route for the component.
ex: 
const routes: Routes = [
  {
    path: 'register',
    component: RegistrationComponent
  }
];

5. In app.component.html add a anchor tag with routerlink as '/register'.

6. Add the code "<router-outlet></router-outlet>" in app.component.html file. Now the content in register.component.html will be visible when we click on register button in app.component.html.

7. If we want to show only register.component.html content but not app.component.html content then add if condition in app.component.html file.

8. Import the FormsModule, httpclientmodule in app.module.ts file, add them in imports section.


CORS error in microservices
----------------------------------
Add the below line of code in porogram.cs to get rid of cors error.

app.UseCors(o => o.AllowAnyOrigin().AllowAnyHeader().AllowAnyMethod());

Redirect to login page by default
--------------------------------------
Add the below code in app.component.ts file.
ngOnInit(): void {
    if(!this.LoggedIn(true)){
      this.router.navigate(['login']);
    }
  }
